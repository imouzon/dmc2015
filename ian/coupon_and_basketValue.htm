<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta http-equiv="Content-Style-Type" content="text/css" />
  <meta name="generator" content="pandoc" />
  <meta name="author" content="none" />
  <meta name="date" content="2015-04-28" />
  <title>Testing the DMC template</title>
  <style type="text/css">code{white-space: pre;}</style>
  <style type="text/css">
div.sourceCode { overflow-x: auto; }
table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0; padding: 0; vertical-align: baseline; border: none; }
table.sourceCode { width: 100%; line-height: 100%; }
td.lineNumbers { text-align: right; padding-right: 4px; padding-left: 4px; color: #aaaaaa; border-right: 1px solid #aaaaaa; }
td.sourceCode { padding-left: 5px; }
code > span.kw { color: #007020; font-weight: bold; }
code > span.dt { color: #902000; }
code > span.dv { color: #40a070; }
code > span.bn { color: #40a070; }
code > span.fl { color: #40a070; }
code > span.ch { color: #4070a0; }
code > span.st { color: #4070a0; }
code > span.co { color: #60a0b0; font-style: italic; }
code > span.ot { color: #007020; }
code > span.al { color: #ff0000; font-weight: bold; }
code > span.fu { color: #06287e; }
code > span.er { color: #ff0000; font-weight: bold; }
  </style>
</head>
<body>
<div id="header">
<h1 class="title">Testing the DMC template</h1>
<h2 class="author">none</h2>
<h3 class="date">April 28, 2015</h3>
</div>
<!--pandoc
s:
number-sections:

t: html
mathjax:
o: coupon_and_basketValue.htm

t: latex
template: /User/users/dmc2015/ian/main_document.latex
latex-engine: pdflatex
o: coupon_and_basketValue.pdf
-->
<!--- : R code (No Results in Document) -->
<p>I am using the following packages: <!---  paks: R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   <span class="kw">library</span>(ggplot2)
   <span class="kw">library</span>(lubridate)
   <span class="kw">library</span>(xtable)
   <span class="kw">library</span>(foreach)
   <span class="kw">library</span>(rCharts)
   <span class="kw">library</span>(magrittr)
   <span class="kw">library</span>(tidyr)
   <span class="kw">library</span>(dplyr)
   <span class="kw">library</span>(reshape2)
   <span class="kw">library</span>(gtools)
   <span class="kw">library</span>(sqldf)</code></pre></div>
<p>I am also using the simple renaming function: <!---  Name: R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   renm =<span class="st"> </span>function(dsn,<span class="dt">colnum=</span><span class="ot">NULL</span>,<span class="dt">newname=</span><span class="ot">NULL</span>){
      if(<span class="kw">is.null</span>(newname)) newname=colnum; colnum=<span class="ot">NULL</span>
      if (<span class="kw">is.null</span>(colnum)) colnum =<span class="st"> </span><span class="dv">1</span>:<span class="kw">ncol</span>(dsn)
      <span class="kw">names</span>(dsn)[colnum] =<span class="st"> </span>newname
      <span class="kw">return</span>(dsn)
   }</code></pre></div>
<p>and my working directory is set to . # Reading the Data I am working from the current feature matrix: <!---  readFeatMat: R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   featMat =<span class="st"> </span><span class="kw">readRDS</span>(<span class="st">&quot;~/dmc2015/data/featureMatrix/featMat_v1.1.rds&quot;</span>)
   trn =<span class="st"> </span>featMat$train
   cls =<span class="st"> </span>featMat$class</code></pre></div>
<p>In case I need to reference the raw data, I will read that too: <!---  readRaw: R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   raw.trn =<span class="st"> </span><span class="kw">read.csv</span>(<span class="st">&quot;~/dmc2015/data/clean_data/train_simple_name.csv&quot;</span>)
   raw.cls =<span class="st"> </span><span class="kw">read.csv</span>(<span class="st">&quot;~/dmc2015/data/clean_data/test_simple_name.csv&quot;</span>)</code></pre></div>
<h1 id="working-with-the-data"><span class="header-section-number">1</span> Working with the data</h1>
<p>Since we are looking at coupon by batch information, I am going to melt the data using my coupon melt function: <!---  meltCoupon: R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   <span class="kw">source</span>(<span class="st">&quot;./R/stackCoupons.R&quot;</span>)
   stack.res =<span class="st"> </span><span class="kw">stackCoupons</span>(trn[,<span class="dv">1</span>:<span class="dv">49</span>],cls[,<span class="dv">1</span>:<span class="dv">49</span>])</code></pre></div>
<pre><code>## using the following as id:
##  orderID,
##  orderTime,
##  userID,
##  couponsReceived,
##  basketValue,
##  couponsReceivedDate,
##  couponsReceivedTime,
##  couponsReceivedDoW,
##  couponsReceivedWeekend,
##  couponsReceivedFriSat,
##  orderTimeDate,
##  orderTimeTime,
##  orderTimeDoW,
##  orderTimeWeekend,
##  orderTimeFriSat,
##  batchID,
##  couponsExpire,
##  couponsSent,
##  TimeBtwnSentRec,
##  TimeBtwnRecExpire,
##  TimeBtwnRecOrder,
##  TimeBtwnOrderExpire
## 
## using the following as measure columns:
##  couponID1,
##  price1,
##  basePrice1,
##  reward1,
##  premiumProduct1,
##  brand1,
##  productGroup1,
##  categoryIDs1,
##  coupon1Used,
##  couponID2,
##  price2,
##  basePrice2,
##  reward2,
##  premiumProduct2,
##  brand2,
##  productGroup2,
##  categoryIDs2,
##  coupon2Used,
##  couponID3,
##  price3,
##  basePrice3,
##  reward3,
##  premiumProduct3,
##  brand3,
##  productGroup3,
##  categoryIDs3,
##  coupon3Used</code></pre>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   bvalues =<span class="st"> </span>stack.res$train %&gt;%<span class="st"> </span>
<span class="st">      </span><span class="kw">select</span>(couponID,basketValue) %&gt;%<span class="st"> </span>
<span class="st">      </span><span class="kw">arrange</span>(basketValue) %$%<span class="st"> </span>
<span class="st">      </span>basketValue %&gt;%<span class="st"> </span>
<span class="st">      </span>unique %&gt;%<span class="st"> </span>
<span class="st">      </span>data.frame %&gt;%<span class="st"> </span>
<span class="st">      </span><span class="kw">renm</span>(<span class="st">&quot;basketValue&quot;</span>)

   bvalues$bValRank =<span class="st"> </span><span class="dv">1</span>:<span class="kw">nrow</span>(bvalues)

   stack.res$train =<span class="st"> </span>stack.res$train %&gt;%<span class="st"> </span><span class="kw">left_join</span>(bvalues,<span class="dt">by=</span><span class="st">&#39;basketValue&#39;</span>)</code></pre></div>
<h1 id="basic-summary-stats"><span class="header-section-number">2</span> Basic Summary Stats</h1>
<!---  meanbval: R code (Code in Document) -->
<p>We can get the 5-number summary stats quickly using  and this function:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   sum_stats =<span class="st"> </span>function(dsn){
      dsn %&gt;%<span class="st"> </span><span class="kw">summarise</span>(
         <span class="dt">min_bValXcpn =</span> <span class="kw">min</span>(basketValue),
         <span class="dt">q05_bValXcpn =</span> <span class="kw">quantile</span>(basketValue,.<span class="dv">05</span>),
         <span class="dt">q25_bValXcpn =</span> <span class="kw">quantile</span>(basketValue,.<span class="dv">25</span>), 
         <span class="dt">mean_bValXcpn =</span> <span class="kw">mean</span>(basketValue),
         <span class="dt">med_bValXcpn =</span> <span class="kw">median</span>(basketValue),
         <span class="dt">max_bValXcpn =</span> <span class="kw">max</span>(basketValue),
         <span class="dt">q75_bValXcpn =</span> <span class="kw">quantile</span>(basketValue,.<span class="dv">75</span>),
         <span class="dt">q95_bValXcpn =</span> <span class="kw">quantile</span>(basketValue,.<span class="dv">95</span>),

         <span class="dt">min_bValrankXcpn =</span> <span class="kw">min</span>(bValRank),
         <span class="dt">mean_bValrankXcpn =</span> <span class="kw">mean</span>(bValRank),
         <span class="dt">max_bValrankXcpn =</span> <span class="kw">max</span>(bValRank),

         <span class="dt">minOrderTimeXcpn =</span> <span class="kw">min</span>(orderTimeTime),
         <span class="dt">meanOrderTimeXcpn =</span> <span class="kw">mean</span>(orderTimeTime),
         <span class="dt">medOrderTimeXcpn =</span> <span class="kw">median</span>(orderTimeTime),
         <span class="dt">maxOrderTimeXcpn =</span> <span class="kw">max</span>(orderTimeTime),

         <span class="dt">minSentRecTimeXcpn =</span> <span class="kw">min</span>(TimeBtwnSentRec),
         <span class="dt">meanSentRecTimeXcpn =</span> <span class="kw">mean</span>(TimeBtwnSentRec),
         <span class="dt">medSentRecTimeXcpn =</span> <span class="kw">median</span>(TimeBtwnSentRec),
         <span class="dt">maxSentRecTimeXcpn =</span> <span class="kw">max</span>(TimeBtwnSentRec),

         <span class="dt">minRecExpTimeXcpn =</span> <span class="kw">min</span>(TimeBtwnRecExpire),
         <span class="dt">meanRecExpTimeXcpn =</span> <span class="kw">mean</span>(TimeBtwnRecExpire),
         <span class="dt">medRecExpTimeXcpn =</span> <span class="kw">median</span>(TimeBtwnRecExpire),
         <span class="dt">maxRecExpTimeXcpn =</span> <span class="kw">max</span>(TimeBtwnRecExpire),

         <span class="dt">minRecOrderTimeXcpn =</span> <span class="kw">min</span>(TimeBtwnRecOrder),
         <span class="dt">meanRecOrderTimeXcpn =</span> <span class="kw">mean</span>(TimeBtwnRecOrder),
         <span class="dt">medRecOrderTimeXcpn =</span> <span class="kw">median</span>(TimeBtwnRecOrder),
         <span class="dt">maxRecOrderTimeXcpn =</span> <span class="kw">max</span>(TimeBtwnRecOrder),

         <span class="dt">minOrderExpTimeXcpn =</span> <span class="kw">min</span>(TimeBtwnOrderExpire),
         <span class="dt">meanOrderExpTimeXcpn =</span> <span class="kw">mean</span>(TimeBtwnOrderExpire),
         <span class="dt">medOrderExpTimeXcpn =</span> <span class="kw">median</span>(TimeBtwnOrderExpire),
         <span class="dt">maxOrderExpTimeXcpn =</span> <span class="kw">max</span>(TimeBtwnOrderExpire))
   } </code></pre></div>
<p>I can store stats in statXcoupon <!---  getStats: R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   statXcoupon =<span class="st"> </span>stack.res$train %&gt;%<span class="st"> </span>
<span class="st">      </span><span class="kw">group_by</span>(couponID) %&gt;%<span class="st"> </span>
<span class="st">      </span>sum_stats</code></pre></div>
<p>And we can get the same statistics for coupons being used and coupons not being used:</p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   statXcoupon =<span class="st"> </span>stack.res$train %&gt;%
<span class="st">        </span><span class="kw">group_by</span>(couponID,couponUsed) %&gt;%
<span class="st">        </span>sum_stats %&gt;%
<span class="st">        </span><span class="kw">gather</span>(couponID,couponUsed) %&gt;%<span class="st"> </span>
<span class="st">        </span><span class="kw">renm</span>(<span class="kw">c</span>(<span class="st">&quot;couponID&quot;</span>,<span class="st">&quot;couponUsed&quot;</span>,<span class="st">&quot;var&quot;</span>,<span class="st">&quot;value&quot;</span>)) %&gt;%<span class="st"> </span>
<span class="st">        </span><span class="kw">group_by</span>(couponID,value) %&gt;%
<span class="st">        </span><span class="kw">summarise</span>(<span class="dt">varname =</span> <span class="kw">paste</span>(var,couponUsed,<span class="dt">sep=</span><span class="st">&quot;.used&quot;</span>)) %&gt;%<span class="st"> </span>
<span class="st">        </span><span class="kw">select</span>(-couponID) %&gt;%
<span class="st">        </span><span class="kw">spread</span>(varname,value) %&gt;%
<span class="st">        </span><span class="kw">left_join</span>(statXcoupon,<span class="dt">by=</span><span class="st">&quot;couponID&quot;</span>) %&gt;%
<span class="st">        </span><span class="kw">arrange</span>(couponID)</code></pre></div>
<p>We can save these results: <!---  : R code (Code in Document) --></p>
<div class="sourceCode"><pre class="sourceCode r"><code class="sourceCode r">   statXcoupon1 =<span class="st"> </span>statXcoupon %&gt;%<span class="st"> </span><span class="kw">renm</span>(<span class="kw">c</span>(<span class="st">&quot;couponID1&quot;</span>,<span class="kw">paste0</span>(<span class="kw">names</span>(statXcoupon)[<span class="kw">which</span>(<span class="kw">names</span>(statXcoupon) !=<span class="st"> &quot;couponID&quot;</span>)],<span class="st">&#39;.col1&#39;</span>)))
   statXcoupon2 =<span class="st"> </span>statXcoupon %&gt;%<span class="st"> </span><span class="kw">renm</span>(<span class="kw">c</span>(<span class="st">&quot;couponID2&quot;</span>,<span class="kw">paste0</span>(<span class="kw">names</span>(statXcoupon)[<span class="kw">which</span>(<span class="kw">names</span>(statXcoupon) !=<span class="st"> &quot;couponID&quot;</span>)],<span class="st">&#39;.col2&#39;</span>)))
   statXcoupon3 =<span class="st"> </span>statXcoupon %&gt;%<span class="st"> </span><span class="kw">renm</span>(<span class="kw">c</span>(<span class="st">&quot;couponID3&quot;</span>,<span class="kw">paste0</span>(<span class="kw">names</span>(statXcoupon)[<span class="kw">which</span>(<span class="kw">names</span>(statXcoupon) !=<span class="st"> &quot;couponID&quot;</span>)],<span class="st">&#39;.col3&#39;</span>)))

   trn.col =<span class="st"> </span>trn[,<span class="kw">c</span>(<span class="st">&quot;orderID&quot;</span>,<span class="st">&quot;couponID1&quot;</span>,<span class="st">&quot;couponID2&quot;</span>,<span class="st">&quot;couponID3&quot;</span>)]
   trn.col =<span class="st"> </span>trn.col %&gt;%<span class="st"> </span><span class="kw">left_join</span>(statXcoupon1,<span class="dt">by=</span><span class="st">&quot;couponID1&quot;</span>)
   trn.col =<span class="st"> </span>trn.col %&gt;%<span class="st"> </span><span class="kw">left_join</span>(statXcoupon2,<span class="dt">by=</span><span class="st">&quot;couponID2&quot;</span>)
   trn.col =<span class="st"> </span>trn.col %&gt;%<span class="st"> </span><span class="kw">left_join</span>(statXcoupon3,<span class="dt">by=</span><span class="st">&quot;couponID3&quot;</span>)

   <span class="kw">saveRDS</span>(trn.col,<span class="dt">file=</span><span class="st">&quot;../features/feature_files/coupon_basket_stats_train_byorder.rds&quot;</span>) 
   <span class="kw">write.csv</span>(trn.col,<span class="dt">file=</span><span class="st">&quot;../features/feature_files/coupon_basket_stats_train_byorder.csv&quot;</span>,<span class="dt">quote=</span><span class="ot">FALSE</span>,<span class="dt">na=</span><span class="st">&quot;&quot;</span>,<span class="dt">row.names=</span><span class="ot">FALSE</span>)

   cls.col =<span class="st"> </span>cls[,<span class="kw">c</span>(<span class="st">&quot;orderID&quot;</span>,<span class="st">&quot;couponID1&quot;</span>,<span class="st">&quot;couponID2&quot;</span>,<span class="st">&quot;couponID3&quot;</span>)]
   cls.col =<span class="st"> </span>cls.col %&gt;%<span class="st"> </span><span class="kw">left_join</span>(statXcoupon1,<span class="dt">by=</span><span class="st">&quot;couponID1&quot;</span>)
   cls.col =<span class="st"> </span>cls.col %&gt;%<span class="st"> </span><span class="kw">left_join</span>(statXcoupon2,<span class="dt">by=</span><span class="st">&quot;couponID2&quot;</span>)
   cls.col =<span class="st"> </span>cls.col %&gt;%<span class="st"> </span><span class="kw">left_join</span>(statXcoupon3,<span class="dt">by=</span><span class="st">&quot;couponID3&quot;</span>)
   
   <span class="kw">saveRDS</span>(cls.col,<span class="dt">file=</span><span class="st">&quot;../features/feature_files/coupon_basket_stats_class_byorder.rds&quot;</span>) 
   <span class="kw">write.csv</span>(cls.col,<span class="dt">file=</span><span class="st">&quot;../features/feature_files/coupon_basket_stats_class_byorder.csv&quot;</span>,<span class="dt">quote=</span><span class="ot">FALSE</span>,<span class="dt">na=</span><span class="st">&quot;&quot;</span>,<span class="dt">row.names=</span><span class="ot">FALSE</span>)</code></pre></div>
</body>
</html>
