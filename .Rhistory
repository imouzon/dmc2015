<<<<<<< HEAD
abs(f(t.new)-f(t))/abs(f(t)+0.00005)
t.new <- t-a.min*gp
abs(f(t.new)-f(t))/abs(f(t)+0.00005)
to
t0
x <- rep(c(0.02,0.06,0.11,0.22,0.56,1.1),2)
y <- c(47,97,123,152,191,200,76,107,139,159,201,207)
y.star <- 1/y
u <- 1/x
reg <- lm(y.star~u)
b0 <- reg$coefficients[1]
b1 <- reg$coefficients[2]
theta1 <- 1/b0
theta2 <- theta1*b1
t0 <- c(theta1,theta2)
t0
gp1 <- -2*sum((y-t[1]*x/(x+t[2]))*(x/(x+t[2])))
gp2 <- 2*t[1]*sum((y-t[1]*x/(x+t[2]))*(x/((x+t[2])^2)))
gp <- c(gp1,gp2)
gp
t.new <- t-0.01*gp
t.new
t
f(t.new)
t(t)
f(t)
x <- rep(c(0.02,0.06,0.11,0.22,0.56,1.1),2)
y <- c(47,97,123,152,191,200,76,107,139,159,201,207)
y.star <- 1/y
u <- 1/x
reg <- lm(y.star~u)
b0 <- reg$coefficients[1]
b1 <- reg$coefficients[2]
theta1 <- 1/b0
theta2 <- theta1*b1
t0 <- c(theta1,theta2)
gp1 <- -2*sum((y-t[1]*x/(x+t[2]))*(x/(x+t[2])))
gp2 <- 2*t[1]*sum((y-t[1]*x/(x+t[2]))*(x/((x+t[2])^2)))
gp <- c(gp1,gp2)
f <- function(t){
sum((y-t[1]*x/(x+t[2]))^2)
}
gp
t0-c(0.01,0.00001)%*%gp
t0
t.new <- t0-c(0.01,0.00001)%*%gp
f(t.new)-f(t0)
t.new
f(t.new)
t(t0)
f(t0)
t0
t.new <- c(196,0.05)
f(t.new)-f(t)
f(t.new)
a1 <- 0.01
a2 <- 0.0000001
t <- t0
t.new <- t-c(a1,a2)%*%gp
f(t.new)-f(t)
t.new
while(f(t.new)-f(t)>=0){
a1 <- a1/2
a2 <- a2/2
t.new <- t-c(a1,a2)%*%gp
}
a1
a2
a2 <- 0.00000001
a2*gp[2]
t[2]
t.new <- c(196,0.05)
f(t.new)-f(t)
t.new <- c(196.6,0.05)
f(t.new)-f(t)
t.new <- c(196.6,0.1)
f(t.new)-f(t)
t.new <- c(196.6,0.06)
f(t.new)-f(t)
t.new <- c(196.6,0.05)
f(t.new)-f(t)
t.new <- c(196.6,0.08)
f(t.new)-f(t)
t.new <- c(196.6,0.055)
f(t.new)-f(t)
mvNR <- function(x,y,t0,n.iter){
i <- 1
t <- t0
while(i < n.iter){
gp1 <- -2*sum((y-t[1]*x/(x+t[2]))*(x/(x+t[2])))
gp2 <- 2*t[1]*sum((y-t[1]*x/(x+t[2]))*(x/((x+t[2])^2)))
gp <- c(gp1,gp2)
gpp1 <- 2*sum((x/(x+t[2]))^2)
gpp2 <- 2*t[1]*sum(3*t[1]*x^2/(x+t[2])^4-2*y*x/(x+t[2])^3)
gpp12 <- 2*sum(-2*t[1]*x^2/(x+t[2])^3+y*x/(x+t[2])^2)
gpp <- matrix(c(gpp1,gpp12,gpp12,gpp2),2,2)
if(det(gpp)!=0){
tnew <- t-solve(gpp)%*%gp}
else{
tnew <- t-solve(gpp+diag(rep(0.001,2)))%*%gp}
if(sum(abs(tnew-t))/sum(abs(t)+0.0005)==Inf){print("No estimation")}
else{
if(sum(abs(tnew-t))/sum(abs(t)+0.0005)<0.0000001){
return(c(tnew,i))
break}
else{
t <- tnew
i <- i+1}
}
}
}
t0 <- c(theta1,theta2)
t1 <- Sys.time()
mvNR(x,y,t0,1000)
t2 <- Sys.time()
t2-t1
t <- c(212.0.064)
t.new <- c(212,0.064)
f(t.new)-f(t)
gp
alpha<- 0.01
t.new <- t-alpha*c(1,0.00001)%*%gp
t.new
t.new <- t-alpha*c(1,0.000001)%*%gp
t.new
t
t <- t0
0.000001*gp[2]
t
alpha
alpha*0.01112+t[2]
t <- t0
t.new <- t-alpha*c(1,0.000001)%*%gp
t.new
t
c(1,0.000001)%*%gp
c(1,0.000001)*gp
t.new <- t-alpha*c(1,0.000001)*gp
t.new
a1 <- 0.01
a2 <- 0.0001
t <- t0
t.new <- t-c(a1,a2)*gp
t.new
while(f(t.new)-f(t)>=0){
a1 <- a1/2
a2 <- a2/2
t.new <- t-c(a1,a2)*gp
}
a1
a2
t.new
alpha <- 0.01
t.new <- t-alpha*c(1,0.000001)*gp
while(f(t.new)-f(t)>=0){
alpha <- alpha/2
t.new <- t-alpha*c(1,0.000001)*gp
}
alpha
t.new
f(t.new)-f(t)
abs(f(t.new)-f(t))/abs(f(t)+0.00005)
else{t <- t.new
t <- t.new
gp1 <- -2*sum((y-t[1]*x/(x+t[2]))*(x/(x+t[2])))
gp2 <- 2*t[1]*sum((y-t[1]*x/(x+t[2]))*(x/((x+t[2])^2)))
gp <- c(gp1,gp2)
gp
t.new <- t-alpha*c(1,0.000001)*gp
while(f(t.new)-f(t)>=0){
alpha <- alpha/2
t.new <- t-alpha*c(1,0.000001)*gp
}
alpha
t.new
abs(f(t.new)-f(t))/abs(f(t)+0.00005)
t <- t.new
SD <- function(x,t0,n.iter,alpha){
i <- 1
t <- t0
while(i < n.iter){
gp1 <- -2*sum((y-t[1]*x/(x+t[2]))*(x/(x+t[2])))
gp2 <- 2*t[1]*sum((y-t[1]*x/(x+t[2]))*(x/((x+t[2])^2)))
gp <- c(gp1,gp2)
t.new <- t-alpha*c(1,0.000001)*gp
while(f(t.new)-f(t)>=0){
alpha <- alpha/2
t.new <- t-alpha*c(1,0.000001)*gp
}
if(abs(f(t.new)-f(t))/abs(f(t)+0.00005)<0.0001){
return(t.new)
break
}
else{t <- t.new
i <- i+1}
}
}
x
SD(x,t0,1000,0.01)
mvNR(x,y,t0,1000)
SD(x,t0,1000,0.1)
SD(x,t0,1000,0.001)
SD(x,t0,1000,0.5)
b0
b1
b0
t0
mvNR(x,y,t0,1000)
mvNR <- function(x,y,t0,n.iter){
i <- 1
t <- t0
while(i < n.iter){
gp1 <- -2*sum((y-t[1]*x/(x+t[2]))*(x/(x+t[2])))
gp2 <- 2*t[1]*sum((y-t[1]*x/(x+t[2]))*(x/((x+t[2])^2)))
gp <- c(gp1,gp2)
gpp1 <- 2*sum((x/(x+t[2]))^2)
gpp2 <- 2*t[1]*sum(3*t[1]*x^2/(x+t[2])^4-2*y*x/(x+t[2])^3)
gpp12 <- 2*sum(-2*t[1]*x^2/(x+t[2])^3+y*x/(x+t[2])^2)
gpp <- matrix(c(gpp1,gpp12,gpp12,gpp2),2,2)
if(det(gpp)!=0){
tnew <- t-solve(gpp)%*%gp}
else{
tnew <- t-solve(gpp+diag(rep(0.001,2)))%*%gp}
if(sum(abs(tnew-t))/sum(abs(t)+0.0005)==Inf){print("No estimation")}
else{
if(sum(abs(tnew-t))/sum(abs(t)+0.0005)<0.0000001){
return(tnew)
break}
else{
t <- tnew
i <- i+1}
}
}
}
mvNR(x,y,t0,1000)
der <- function(x,t){
d1 <- x/(x+t[2])
d2 <- -t[1]*x/(x+t[2])^2
return(c(d1,d2))
}
GN <- function(x,y,t0,n.iter){
i <- 1
t <- t0
while(i < n.iter){
A <-t(matrix(unlist(lapply(x,function(x) der(x,t))),nrow=2))
Z <- y-t[1]*x/(x+t[2])
H <- solve(t(A)%*%A)%*%t(A)%*%Z
tnew <- t+H
if(sum(abs(tnew-t))/sum(abs(t)+0.0005)==Inf){print("No estimation")}
else{
if(sum(abs(tnew-t))/sum(abs(t)+0.0005)<0.0000001){
return(tnew)
break
}
else{
t <- tnew
i <- i+1}
}
}
}
GN(x,y,t0,1000)
distMatrix <- read.csv("F:/ISU class/580/hw/hw6/dist.csv",header=F)
# calculate distance for a solution
dist.sol <- function(sol){
dist <- 0
n <- length(sol)
for(i in 1:(n-1)){
dist <- dist+distMatrix[sol[i],sol[i+1]]
}
return(dist+distMatrix[sol[1],sol[n]])
}
# generate neighbor
neighbor <- function(sol){
diff <- sample(1:15,2)
id1 <- which(sol==diff[1])
id2 <- which(sol==diff[2])
id <- c(id1,id2)
sol[c(min(id),max(id))] <- sol[c(max(id),min(id))]
return(sol)
}
# simulated annealing algorithm
SA <- function(t,p,m,sol){
t_min <- 0.001
distance <- NULL
while(t>t_min){
i <- 1
while(i<=m){
sol.new <- neighbor(sol)
delta <- dist.sol(sol.new)-dist.sol(sol)
if(delta<=0){sol <- sol.new}
else{
if(exp(-delta/t)>runif(1)){sol <- sol.new}
else{sol <- sol}
}
distance <- rbind(distance,dist.sol(sol))
i <- i+1
}
t <- t*p
}
return(list(solution=sol,dist.final=dist.sol(sol),dist = distance))
}
sol <- sample(1:15)
tsp.res <- SA(400,0.99,100,sol)
tsp.res$sol
tsp.res$dist.final
tsp.res <- SA(400,0.9,100,sol)
tsp.res$dist.final
sol <- sample(1:15)
tsp.res <- SA(400,0.9,100,sol)
tsp.res$dist.final
SA <- function(t,p,m,sol){
t_min <- 0.0001
distance <- NULL
while(t>t_min){
i <- 1
while(i<=m){
sol.new <- neighbor(sol)
delta <- dist.sol(sol.new)-dist.sol(sol)
if(delta<=0){sol <- sol.new}
else{
if(exp(-delta/t)>runif(1)){sol <- sol.new}
else{sol <- sol}
}
distance <- rbind(distance,dist.sol(sol))
i <- i+1
}
t <- t*p
}
return(list(solution=sol,dist.final=dist.sol(sol),dist = distance))
}
sol <- sample(1:15)
tsp.res <- SA(400,0.9,100,sol)
tsp.res$dist.final
tsp.res$solution
sol <- sample(1:15)
tsp.res <- SA(400,0.99,100,sol)
tsp.res$dist.final
tsp.res$sol
sol <- sample(1:15)
tsp.res <- SA(200,0.99,100,sol)
tsp.res$dist.final
tsp.res$sol
tsp.res <- SA(200,0.9,100,sol)
tsp.res$dist.final
tsp.res$sol
library(dplyr)
install.packages("dplyr")
library("dpplyr")
library("dplyr")
?tbl_df
tbl_df()
tbl_df(coupon)
setwd("F:/DMC/dmc2015")
coupon <- read.table("data/raw_data/DMC_2015_orders_train.txt",sep="|",header=T)
tbl_df()
tbl_df(coupon)
mutate(coupon,orderTime=ymd_hms(orderTime))
library(lubridate)
install.packages("lubridate")
library(lubridate)
mutate(coupon,orderTime=ymd_hms(orderTime))
coupon$orderTime
dim(coupon)
coupon[,1:4] %>% tail()
coupon[,1:4]$ tail()
coupon <- read.table("data/raw_data/DMC_2015_orders_train.txt",sep="|",header=T)%>%
tbl_df()%>%
mutate(orderTime=ymd_hms(orderTime))
coupon[,1:4]%>% tail()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(reshape2)
library(plyr)
library(productplot2)
library(productplots)
library(var)
library(car)
library(tm)
library(RColorBrewer) # Generate palette of colours for plots.
library(wordcloud)
library(SnowballC) # Provides wordStem() for stemming.
library(Rgraphviz)
library(tm)
names(coupon)
View(coupon)
View(coupon)
str(coupon)
dim(coupon)
length(unique(userID))
length(unique(coupon$userID))
unique(coupon$userID)[1:10]
user <- unique(coupon$userID)
orderID[which(coupon$userID==user[1])]
coupon$orderID[which(coupon$userID==user[1])]
attach(coupon)
length(unique(brand1))
length(unique(couponID1))
length(unique(productGroup1))
length(unique(brand2))
length(unique(brand3))
length(unique(brand1,na.rm=T))
unique(brand1)
length(unique(brand1,na.rm=F))
length(unique(brand1),na.rm=T)
length(unique(couponID1))
length(unique(productGroup1))
plot(couponsReceived,orderTime)
subset(coupon,userID==user[1])
c1 <- subset(coupon,userID==user[1])
c1[,32]
c1$orderTime
orderTime-couponsReceived
orderTime[1]-couponsReceived[1]
orderTime[1][,2]
orderTime[1]
orderTime[1]$min
couponsReceived[1]$min
class(couponsReceived)
unclass(orderTime[1])
orderTime[1]
unclass(orderTime[1])$min
min(orderTime[1])
orderTime[1]
?lubridate
orderTime <- as.POSIXct(orderTime)
couponsReceived <- as.POSIXct(couponsReceived)
tdiff <- diff(orderTime,couponsReceived,units="hours")
tdiff <- difftime(orderTime,couponsReceived,units="hours")
length(diff)
tdiff
head(tdiff)
tdiff <- difftime(orderTime,couponsReceived,units="mins")
head(tdiff)
tdiff <- difftime(couponsReceived,orderTime,units="mins")
head(tdiff)
orderTime[1]
class(orderTime)
tdiff <- difftime(couponsReceived,orderTime,units="secs")
head(tdiff)
21378/50
21378/60
orderTime[1]
couponsReceived[1]
orderTime[1]-couponsReceived[1]
difftime(orderTime[1],couponsReceived[1])
coupon <- read.table("data/raw_data/DMC_2015_orders_train.txt",sep="|",header=T)%>%
tbl_df()%>%
mutate(orderTime=ymd_hms(orderTime),couponsReceived=ymd_hms(couponsReceived))
orderTime <- as.POSIXct(orderTime)
couponsReceived <- as.POSIXct(couponsReceived)
orderTime[1]
couponsReceived[1]
coupon <- read.table("data/raw_data/DMC_2015_orders_train.txt",sep="|",header=T)
attach(coupon)
orderTime[1]
couponsReceived[1]
coupon$orderTime <- as.POSIXct(orderTime)
coupon$couponsReceived <- as.POSIXct(couponsReceived)
orderTime[1]
couponsReceived[1]
coupon$couponsReceived <- ymd_hms(couponsReceived)
couponsReceived[1]
coupon <- read.table("data/raw_data/DMC_2015_orders_train.txt",sep="|",header=T)
coupon$couponsReceived <- ymd_hms(coupon$couponsReceived)
couponsReceived[1]
coupon$couponsReceived <-  as.POSIXct(coupon$couponsReceived,tz="UTC")
couponsReceived[1]
dat.train <- read.table("data/raw_data/DMC_2015_orders_train.txt",sep="|",header=T)
dat.train$orderTime[1]
dat.train$couponsReceived[1]
dat.train$orderTime <- as.POSIXct(dat.train$orderTime)
dat.train$couponsReceived <-  as.POSIXct(dat.train$couponsReceived)
dat.train$orderTime[1]
dat.train$couponsReceived[1]
tdiff <- difftime(dat.train$orderTime,dat.train$couponsReceived,units="mins")
tdiff[1:10]
View(dat.train)
View(dat.train)
library(ggplot2)
ggplot(dat.train)+geom_point(orderTime,couponsReceived)
ggplot(dat.train)+geom_point(aes(orderTime,couponsReceived))
ggplot(dat.train)+geom_point(aes(couponsReceived,orderTime))
dat.train$tdiff <- difftime(dat.train$orderTime,dat.train$couponsReceived,units="mins")
ggplot(dat.train)+geom_point(aes(tdiff,coupon1Used))
user <- unique(dat.train$userID)
coupon$orderID[which(coupon$userID==user[1])]
dat.train$orderID[which(dat.train$userID==user[1])]
user1 <- dat.train[dat.train$orderID[which(dat.train$userID==user[1])],]
View(user1)
class(dat.train$categoryIDs1)
levels(dat.train$categoryIDs1)
dat$couponused <- colSums(dat.train[,29:31])
dat.train$couponused <- colSums(dat.train[,29:31])
colSums(dat.train[,29:31])
dat.train$couponused <- rowSums(dat.train[,29:31])
summary(dat.train$couponused)
ggplot(dat.train)+geom_box(aes(couponused,tdiff))
boxplot(dat.train$couponused,tdiff)
boxplot(dat.train$couponused,dat.train$tdiff)
boxplot(as.factor(dat.train$couponused),dat.train$tdiff)
as.factor(dat.train$couponused)
boxplot(as.factor(dat.train$couponused),dat.train$tdiff)
dat.train$tdiff
?boxplot
boxplot(dat.train$tdiff~as.factor(dat.train$couponused))
boxplot(tdiff~as.factor(couponused),data=dat.train)
boxplot(tdiff~couponused,data=dat.train)
hist(dat.train$tdiff)
class(dat.train$tdiff)
hist(as.numeric(dat.train$tdiff))
boxplot(as.numeric(tdiff)~couponused,data=dat.train)
=======
class <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_class.txt")
class <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_class.txt", sep="|")
View(class)
train <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_train.txt", sep="|")
View(train)
str(train)
train[1,3]
train$categoryIDs1[1]
library(lubridate)
ymd_hms(train$orderTime[1])
ymd_hms(train$orderTime[1]) > ymd_hms(train$orderTime[2])
summary(train$basketValue)
ymd_hms(train$orderTime[1]) - ymd_hms(train$orderTime[2])
time_diff = ymd_hms(train$orderTime) - ymb_hms(train$orderTime)
time_diff = ymd_hms(train$orderTime) - ymd_hms(train$orderTime)
time_diff[1:2]
time_diff = ymd_hms(train$orderTime) - ymd_hms(train$couponsReceived)
mean(time_diff)
144725.4 / 60
144725.4 / 360
144725.4 / 3600
median(time_diff)
71264 / 3600
qplot(time_diff)
library(ggplot2)
qplot(time_diff)
qplot(time_diff, geom="histogram")
time_diff[1]
as.numeric(time_diff[1])
min_diff = as.numeric(time_diff) / 60
qplot(min_diff, geom="histogram")
qplot(min_diff, geom="histogram", colour=I("white"))
train$minute_diff <- min_diff
qplot(data=train, minute_diff, basketValue, geom="point")
library(dplyr)
train %>% subset(basketValue < 1000) %>%
ggplot(aes(x = minute_diff, y = basketValue)) + geom_point()
2500 / 8
head(train)
head(minute_diff)
sum(train$coupon1Used)
sum(train$coupon2Used)
sum(train$coupon3Used)
dim(train)
<<<<<<< HEAD
rm(list=ls())
train <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_train.txt", sep="|")
library(lubridate)
library(ggplot2)
library(dplyr)
time_diff = ymd_hms(train$orderTime) - ymd_hms(train$couponsReceived)
min_diff = as.numeric(time_diff) / 60
qplot(min_diff, geom="histogram", colour=I("white"))
train$minute_diff <- min_diff
train %>% subset(basketValue < 1000) %>%
ggplot(aes(x = minute_diff, y = basketValue)) + geom_point()
sum(train$coupon1Used)
sum(train$coupon2Used)
sum(train$coupon3Used)
summary(train$basketValue)
View(train)
names(train)
summary(train$basePrice1+train$reward1-train$price1)
rm(list=ls())
train <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_train.txt", sep="|")
train$orderTime <- ymd_hms(train$orderTime)
train$couponsReceived <- ymd_hms(train$couponsReceived)
train$time_diff = train$orderTime - train$couponsReceived
# create variable for difference in times (minutes)
train$minute_diff = as.numeric(train$time_diff) / 60
wday(train$orderTime)
wday(train$orderTime)[1]
wday(train$orderTime, label=T)[1]
train$wday_OrderTime <- wday(train$orderTime, label=T)
train$wday_couponsReceived <- wday(train$couponsReceived, label=T)
summary(train$wday_couponsReceived)
summary(train$wday_OrderTime)
train %>% ggplot(aes(x = wday_OrderTime)) + geom_bar()
train %>% ggplot(aes(x = wday_OrderTime)) + geom_bar(fill = wday_couponsReceived)
train %>% ggplot(aes(x = wday_OrderTime, fill = wday_couponsReceived)) + geom_bar()
rm(list=ls())
train <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_train.txt", sep="|")
train$orderTime <- ymd_hms(train$orderTime)
train$couponsReceived <- ymd_hms(train$couponsReceived)
train$time_diff = train$orderTime - train$couponsReceived
# create variable for difference in times (minutes)
train$minute_diff = as.numeric(train$time_diff) / 60
# create variable for day of the week, for both recieved and order time
train$wday_orderTime <- wday(train$orderTime, label=T)
train$wday_couponsReceived <- wday(train$couponsReceived, label=T)
# indicates that coupons may have different expiration times
qplot(min_diff, geom="histogram", colour=I("white"))
qplot(train$minute_diff, geom="histogram", colour=I("white"))
train %>% ggplot(aes(x = wday_orderTime, fill = wday_couponsReceived)) + geom_bar()
train %>% group_by(wday_orderTime, wday_couponsReceived) %>%
summarize(count = lenght(orderID))
train %>% group_by(wday_orderTime, wday_couponsReceived) %>%
summarize(count = length(orderID))
wday_sum <- train %>% group_by(wday_orderTime, wday_couponsReceived) %>%
summarize(count = length(orderID))
wday_sum
View(wday_sum)
wday_sum <- train %>% group_by(wday_couponsReceivedm, wday_orderTime) %>%
summarize(count = length(orderID))
wday_sum <- train %>% group_by(wday_couponsReceived, wday_orderTime) %>%
summarize(count = length(orderID))
View(wday_sum)
train$wday_orderTime[1]
train$wday_orderTime[1] == "Tues"
summary(subset(train, wday_orderTime == "Tues")$wday_couponsReceived)
summary(subset(train, wday_orderTime == "Tues")$minute_diff)
wday_sum <- train %>% group_by(wday_couponsReceived, wday_orderTime) %>%
summarize(count = length(orderID))
train %>% ggplot(aes(x = wday_couponsReceived, fill = wday_orderTime)) + geom_bar()
train$day_diff = as.numeric(train$minute_diff) / (60*24)
summary(train$day_diff)
train$day_diff = as.numeric(train$minute_diff) %/% (60*24)
summary(train$day_diff)
train$orderTime[1]
train$orderTime[1][1:5]
train$orderTime[1][1]
train$orderTime[1][2]
ymd(train$orderTime[1])
ceiling_date(train$orderTime[1], "day")
ceiling_date(train$orderTime[1], "day") - ceiling_date(train$couponsReceived[1], "day")
ceiling_date(train$orderTime[1], "day") - day(1)
ceiling_date(train$orderTime[1], "day") - days(1)
days(train$orderTime[1])
days(ceiling_date(train$orderTime[1], "day") - ceiling_date(train$couponsReceived[1], "day"))
days(ceiling_date(train$orderTime[156], "day") - ceiling_date(train$couponsReceived[156], "day"))
train$orderTime[1]
train$day_diff = ceiling_date(train$orderTime, "day") - ceiling_date(train$couponsReceived, "day")
summary(train$day_diff)
summary(as.numeric(train$day_diff))
train$day_diff = days(ceiling_date(train$orderTime, "day") - ceiling_date(train$couponsReceived, "day"))
summary(as.numeric(train$day_diff))
86400 / (60*60*24)
train$day_diff = (ceiling_date(train$orderTime, "day") - ceiling_date(train$couponsReceived, "day")) / (3600*24)
summary(as.numeric(train$day_diff))
summary(train$day_diff)
train %>% subset(wday_couponsReceived == "Sun") %>%
summaize(days = mean(as.numeric(day_diff)))
train %>% subset(wday_couponsReceived == "Sun") %>%
summarize(days = mean(as.numeric(day_diff)))
train %>% subset(wday_couponsReceived == "Sun") %>%
ggplot(aes(x = wday_orderTime, fill = as.factor(day_diff))) + geom_bar()
summary(factor(train$day_diff))
train %>% ggplot(aes(x = wday_couponsReceived, fill = factor(day_diff))) + geom_bar()
rm(list=ls())
train <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_class.txt", sep="|")
train$orderTime <- ymd_hms(train$orderTime)
train$couponsReceived <- ymd_hms(train$couponsReceived)
train$time_diff = train$orderTime - train$couponsReceived
# create variable for difference in times (minutes)
train$minute_diff = as.numeric(train$time_diff) / 60
train$day_diff = (ceiling_date(train$orderTime, "day") - ceiling_date(train$couponsReceived, "day")) / (3600*24)
# create variable for day of the week, for both recieved and order time
train$wday_orderTime <- wday(train$orderTime, label=T)
train$wday_couponsReceived <- wday(train$couponsReceived, label=T)
train %>% ggplot(aes(x = wday_orderTime, fill = wday_couponsReceived)) + geom_bar()
train %>% ggplot(aes(x = wday_couponsReceived, fill = wday_orderTime)) + geom_bar()
train %>% ggplot(aes(x = wday_couponsReceived, fill = factor(day_diff))) + geom_bar()
rm(list=ls())
train <- read.csv("/Users/epwalsh/GitHub/dmc2015/data/raw_data/DMC_2015_orders_train.txt", sep="|")
train$orderTime <- ymd_hms(train$orderTime)
train$couponsReceived <- ymd_hms(train$couponsReceived)
train$time_diff = train$orderTime - train$couponsReceived
# create variable for difference in times (minutes)
train$minute_diff = as.numeric(train$time_diff) / 60
train$day_diff = (ceiling_date(train$orderTime, "day") - ceiling_date(train$couponsReceived, "day")) / (3600*24)
# create variable for day of the week, for both recieved and order time
train$wday_orderTime <- wday(train$orderTime, label=T)
train$wday_couponsReceived <- wday(train$couponsReceived, label=T)
qplot(train$minute_diff, geom="histogram", colour=I("white"))
train %>% ggplot(aes(x = wday_orderTime, fill = wday_couponsReceived)) + geom_bar()
train %>% ggplot(aes(x = wday_couponsReceived, fill = wday_orderTime)) + geom_bar()
# every single person who spent their coupon on Tuesday had recieved their coupon on Tuesday, the same day
wday_sum <- train %>% group_by(wday_couponsReceived, wday_orderTime) %>%
summarize(count = length(orderID))
# most coupons are sent out on Tuesday
# all coupons expire before Tuesday
train %>% ggplot(aes(x = wday_couponsReceived, fill = factor(day_diff))) + geom_bar()
# ==================================================================
# coupon usage
# ==================================================================
# coupon 1 used the most, then coupon 2, then coupon 3
sum(train$coupon1Used)
sum(train$coupon2Used)
sum(train$coupon3Used)
# ==================================================================
# what the hell is the difference between basePrice, price, and reward?
# ==================================================================
summary(train$basePrice1+train$reward1-train$price1)
# still no idea
=======
>>>>>>> origin/master
>>>>>>> origin/master
